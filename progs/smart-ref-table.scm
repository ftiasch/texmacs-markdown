(texmacs-module (smart-ref-table))

(define smart-ref-table (make-ahash-table))

(define-public (md-smart-ref-params x)
  (ahash-ref smart-ref-table x '("" "")))

(map (lambda (x) (ahash-set! smart-ref-table (car x) (cdr x)))
  '((unknown-ref . ("Unknown reference" "identity"))
    (t-ref . ("Theorem" "identity"))
    (th-ref . ("Theorem" "identity"))
    (thm-ref . ("Theorem" "identity"))
    (theorem-ref . ("Theorem" "identity"))
    (p-ref . ("Proposition" "identity"))
    (pr-ref . ("Proposition" "identity"))
    (prop-ref . ("Proposition" "identity"))
    (proposition-ref . ("Proposition" "identity"))
    (l-ref . ("Lemma" "identity"))
    (lm-ref . ("Lemma" "identity"))
    (lem-ref . ("Lemma" "identity"))
    (lemma-ref . ("Lemma" "identity"))
    (co-ref . ("Corollary" "identity"))
    (cor-ref . ("Corollary" "identity"))
    (corr-ref . ("Corollary" "identity"))
    (corrolary-ref . ("Corollary" "identity"))
    (def-ref . ("Definition" "identity"))
    (dfn-ref . ("Definition" "identity"))
    (defn-ref . ("Definition" "identity"))
    (definition-ref . ("Definition" "identity"))
    (not-ref . ("Notation" "identity"))
    (nota-ref . ("Notation" "identity"))
    (notation-ref . ("Notation" "identity"))
    (ax-ref . ("Axiom" "identity"))
    (axiom-ref . ("Axiom" "identity"))
    (conv-ref . ("Convention" "identity"))
    (convention-ref . ("Convention" "identity"))
    (conj-ref . ("Conjecture" "identity"))
    (conjecture-ref . ("Conjecture" "identity"))
    (rem-ref . ("Remark" "identity"))
    (remark-ref . ("Remark" "identity"))
    (note-ref . ("Note" "identity"))
    (war-ref . ("Warning" "identity"))
    (warning-ref . ("Warning" "identity"))
    (ex-ref . ("Example" "identity"))
    (example-ref . ("Example" "identity"))
    (exc-ref . ("Exercise" "identity"))
    (exe-ref . ("Exercise" "identity"))
    (exer-ref . ("Exercise" "identity"))
    (exercise-ref . ("Exercise" "identity"))
    (prb-ref . ("Problem" "identity"))
    (prob-ref . ("Problem" "identity"))
    (problem-ref . ("Problem" "identity"))
    (sol-ref . ("Solution" "identity"))
    (solution-ref . ("Solution" "identity"))
    (part-ref . ("Part" "identity"))
    (c-ref . ("Chapter" "identity"))
    (ch-ref . ("Chapter" "identity"))
    (chp-ref . ("Chapter" "identity"))
    (chap-ref . ("Chapter" "identity"))
    (chapter-ref . ("Chapter" "identity"))
    (s-ref . ("Section" "identity"))
    (sec-ref . ("Section" "identity"))
    (section-ref . ("Section" "identity"))
    (ss-ref . ("Subsection" "identity"))
    (ssec-ref . ("Subsection" "identity"))
    (subs-ref . ("Subsection" "identity"))
    (subsec-ref . ("Subsection" "identity"))
    (subsection-ref . ("Section" "identity"))
    (ap-ref . ("Appendix" "identity"))
    (app-ref . ("Appendix" "identity"))
    (appendix-ref . ("Appendix" "identity"))
    (par-ref . ("Paragraph" "identity"))
    (para-ref . ("Paragraph" "identity"))
    (paragraph-ref . ("Paragraph" "identity"))
    (eq-ref . ("" "make-eqref"))
    (eqn-ref . ("" "make-eqref"))
    (equa-ref . ("" "make-eqref"))
    (equation-ref . ("" "make-eqref"))
    (fig-ref . ("Figure" "identity"))
    (figure-ref . ("Figure" "identity"))
    (tab-ref . ("Table" "identity"))
    (table-ref . ("Table" "identity"))
    (a-ref . ("Algorithm" "identity"))
    (al-ref . ("Algorithm" "identity"))
    (alg-ref . ("Algorithm" "identity"))
    (algo-ref . ("Algorithm" "identity"))
    (algorithm-ref . ("Algorithm" "identity"))
    (step-ref . ("Step" "identity"))))
